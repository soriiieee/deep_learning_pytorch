#=======================================================================
# Get .idx File
#=======================================================================
GET_INDEX_FILE(){

  local FILE ID1 #set local vars
  FILE=$(basename $1)
  ID1=$(echo $FILE | cut -d "-" -f 1)

  [ $(FILE_CHECK $FILE) -ne 0 ] && {
    if [ -e ${MIC_PATH}/data/${ID1}/${FILE} -a \
         -s ${MIC_PATH}/data/${ID1}/${FILE} ] ; then
       echo "Get via mount" ${FILE}
       cp ${MIC_PATH}/data/${ID1}/${FILE} ./
    else
       echo "Get via wget" ${FILE}
       wget -nc ${MIC_URL}/product/data/${ID1}/${FILE}
    fi
  }

}
#=======================================================================
# Get Product Corresponding on RUN_MODE
#=======================================================================
GET_PRODUCT(){

   local INIT_UTC

   [ $1 = "UNYO"  ] && GET_UNYO_PRODUCT $(basename $2)
   [ $1 = "RETRY" ] && GET_CHOKI_PRODUCT $(basename $2)

}
#=======================================================================
# Get Product
#=======================================================================
GET_UNYO_PRODUCT(){

  local PD1 PD2 PD3 INIT_UTC MIC_FILE
  ID1=$(echo $1 | cut -d "-" -f 1)
  ID2=$(echo $1 | cut -d "-" -f 2)
  ID3=$(echo $1 | cut -d "-" -f 3)
  INIT_UTC=$( echo $1 | cut -d "-" -f 4 | cut -d "." -f 1)

  FILE=$(basename $1)

  ## ファイル提供装置より取得
  [ $(FILE_CHECK $FILE) -ne 0 ] && {
    if [ -e ${MIC_PATH}/data/${ID1}/${INIT_UTC:0:8}/${ID2}/${ID3}/${1} -a \
         -s ${MIC_PATH}/data/${ID1}/${INIT_UTC:0:8}/${ID2}/${ID3}/${1} ] ; then
       echo "Get via mount" ${1}
       cp ${MIC_PATH}/data/${ID1}/${INIT_UTC:0:8}/${ID2}/${ID3}/${1} ./
    else
       echo "Get via wget" ${FILE}
       wget -nc  ${MIC_URL}/product/data/${ID1}/${INIT_UTC:0:8}/${ID2}/${ID3}/${1}
    fi
  }

}
#=======================================================================
# Get Product
#=======================================================================
GET_CHOKI_PRODUCT(){

  local PD1 PD2 PD3 INIT_UTC MIC_FILE
  ID1=$(echo $1 | cut -d "-" -f 1)
  ID2=$(echo $1 | cut -d "-" -f 2)
  ID3=$(echo $1 | cut -d "-" -f 3)
  INIT_UTC=$( echo $1 | cut -d "-" -f 4 | cut -d "." -f 1)

  FILE=$(basename $1)

  ## 長期保存サーバより取得
  [ $(FILE_CHECK $FILE) -ne 0 ] && {
    echo "Get from CHOKI-HOZON via wget" $FILE
    # echo $CHOKI_URL/stock/${INIT_UTC:0:4}/${INIT_UTC:4:2}/${INIT_UTC:0:8}/data/$ID1/${INIT_UTC:0:8}/$ID2/$ID3/$1
    #ファイル名表示
    wget --auth-no-challenge --http-user=micosguest --http-passwd=mic6guest $CHOKI_URL/stock/${INIT_UTC:0:4}/${INIT_UTC:4:2}/${INIT_UTC:0:8}/data/$ID1/${INIT_UTC:0:8}/$ID2/$ID3/$1
  }

}
#=======================================================================
FTP_GET(){
 ## 指定ファイルをFTP GETする  FTP_GET address user_name passwd $DIR $FILE
cat << EOF | ftp -nv
  open $1
  user $2 $3
  cd $4
  prompt off
  bin
  get $5
  bye
EOF
}

#=======================================================================
FTP_PUT(){
 ## 指定ファイルをFTP GETする  FTP_PUT address user_name passwd $DIR $FILE
cat << EOF | ftp -nv
  open $1
  user $2 $3
  cd $4
  prompt off
  put $5
  bye
EOF
}

#=======================================================================

#=======================================================================
FTP_MGET(){
 ## 指定ファイルをFTP GETする  FTP_MGET address user_name passwd $DIR $FILE
cat << EOF | ftp -nv
  open $1
  user $2 $3
  cd $4
  prompt off
  bin
  mget *
  bye
EOF
}
#=======================================================================


GET_AMeDaS_MONTH(){
  ## 指定ファイルをFTP GETする  GET_AMeDaS_MONTH local_director cate(amedas/surface) MONTH(yyyymm) LOG(FILE check log)
  LOCAL=$1
  CATE=$2
  CODE=$3
  MONTH=$4
  LOG=$5
  
  [ $CATE == "amedas" ] && CATE2=amd
  [ $CATE == "surface" ] && CATE2=sfc

  cd $LOCAL
  # LIST_CODE=`cat $PY/snow/list_snow.dat | awk '{print $1}'`
  # LIST_MONTH=`cat $TBL/month_snow.tbl | awk '{print $1}'`
  # for MONTH in ${LIST_MONTH[@]};do
  RE57=/home/share/usbdisk/DATA/OBS/01-JMA/SOKUHOU/${MONTH:0:4}_${MONTH:4:2}/${CATE}/10min_h/${MONTH}
  # for CODE in ${LIST_CODE[@]};do
  FILE=${CATE2}_10minh_${MONTH}_${CODE}.csv

  [ ! -e $FILE ] && {
  # FTP_GET 133.105.83.72 griduser grid123 $DIR
    FTP_GET 133.105.83.57 share share $RE57 $FILE
    nkf -w --overwrite $FILE
  }
  FLG=`FILE_CHECK $FILE`
  echo $CODE $MONTH $CATE $FLG >> $LOG
}

GET_SFC(){
    ## 指定ファイルをFTP GETする  GET_SFC MONTH(yyyymm) CODE(47***) LOCAL(director)
  MONTH=$1
  CODE=$2
  LOCAL=$3

  [ $MONTH -lt 202004 ] && {
    IP=133.105.83.57
    USER=share
    PASSWD=share
    REMOTE=/home/share/usbdisk/DATA/OBS/01-JMA/SOKUHOU/${MONTH:0:4}_${MONTH:4:2}/surface/10min_h/${MONTH}
  } || {
    IP=133.105.83.58
    USER=ysorimachi
    PASSWD=ysorimachi123
    REMOTE=/home/ysorimachi/data/SOKUHOU_210129/${MONTH}/sfc
  }

  #common
  cd $3
  FILE=sfc_10minh_${MONTH}_${CODE}.csv
  FTP_GET $IP $USER $PASSWD $REMOTE $FILE
  nkf -w --overwrite $FILE
}


GET_HIMAWARI8(){
  BAND=$1
  NOW_U=$2

  [ $BAND == "02" ] && BLEN=R100
  [ $BAND == "03" ] && BLEN=R050
  [ $BAND == "05" ] && BLEN=R200
  [ $BAND == "13" ] && BLEN=R200
  [ $BAND == "15" ] && BLEN=R200

  [ ${NOW_U:0:6} -ge 201901 -a ${NOW_U:0:6} -lt 202107 ] && NAME=data2
  [ ${NOW_U:0:6} -ge 202107 ] && NAME=data1

  DIR=/media/satdb-1/${NAME}/solasat8/122841/${BAND}_${BLEN}/${NOW_U:0:4}/${NOW_U:4:2}/${NOW_U:6:2}
  FILE=122841-${NOW_U:10:2}00${BAND}-${BLEN}-${NOW_U}00.png
  # echo $DIR
  # echo $FILE
  # exit
  FTP_GET 133.105.83.55 ysorimachi ysorimachi123 $DIR $FILE

  # FILE ----- > 
}